//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Posts Table
class PostsTable extends SupabaseTable<PostsRow> {
  /// Table Name
  @override
  String get tableName => 'posts';

  /// Create a [PostsRow] from the [data] provided
  @override
  PostsRow createRow(Map<String, dynamic> data) => PostsRow.fromJson(data);
}

/// Posts Row
class PostsRow extends SupabaseDataRow {
  /// Posts Row
  PostsRow({
    required String title,
    String? id,
    DateTime? createdAt,
    String? description,
    String? videoUrl,
    String? coordinates,
    String? grade,
    String? userId,
    String? climbTypeId,
  }) : super({
         'title': supaSerialize(title),
         if (id != null) 'id': supaSerialize(id),
         if (createdAt != null) 'created_at': supaSerialize(createdAt),
         if (description != null) 'description': supaSerialize(description),
         if (videoUrl != null) 'video_url': supaSerialize(videoUrl),
         if (coordinates != null) 'coordinates': supaSerialize(coordinates),
         if (grade != null) 'grade': supaSerialize(grade),
         if (userId != null) 'user_id': supaSerialize(userId),
         if (climbTypeId != null) 'climb_type_id': supaSerialize(climbTypeId),
       });

  /// Posts Row
  const PostsRow._(super.data);

  /// Create Posts Row from a [data] map
  factory PostsRow.fromJson(Map<String, dynamic> data) =>
      PostsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => PostsTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  String get id => getField<String>(idField, defaultValue: '')!;
  set id(String value) => setField<String>(idField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Title field name
  static const String titleField = 'title';

  /// Title
  String get title => getField<String>(titleField)!;
  set title(String value) => setField<String>(titleField, value);

  /// Description field name
  static const String descriptionField = 'description';

  /// Description
  String? get description => getField<String>(descriptionField);
  set description(String? value) => setField<String>(descriptionField, value);

  /// Video Url field name
  static const String videoUrlField = 'video_url';

  /// Video Url
  String? get videoUrl => getField<String>(videoUrlField);
  set videoUrl(String? value) => setField<String>(videoUrlField, value);

  /// Coordinates field name
  static const String coordinatesField = 'coordinates';

  /// Coordinates
  String? get coordinates => getField<String>(coordinatesField);
  set coordinates(String? value) => setField<String>(coordinatesField, value);

  /// Grade field name
  static const String gradeField = 'grade';

  /// Grade
  String? get grade => getField<String>(gradeField);
  set grade(String? value) => setField<String>(gradeField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String? get userId => getField<String>(userIdField);
  set userId(String? value) => setField<String>(userIdField, value);

  /// Climb Type Id field name
  static const String climbTypeIdField = 'climb_type_id';

  /// Climb Type Id
  String? get climbTypeId => getField<String>(climbTypeIdField);
  set climbTypeId(String? value) => setField<String>(climbTypeIdField, value);

  /// Make a copy of the current [PostsRow]
  /// overriding the provided fields
  PostsRow copyWith({
    String? title,
    String? id,
    DateTime? createdAt,
    String? description,
    String? videoUrl,
    String? coordinates,
    String? grade,
    String? userId,
    String? climbTypeId,
  }) => PostsRow.fromJson({
    'title': supaSerialize(title) ?? data['title'],
    'id': supaSerialize(id) ?? data['id'],
    'created_at': supaSerialize(createdAt) ?? data['created_at'],
    'description': supaSerialize(description) ?? data['description'],
    'video_url': supaSerialize(videoUrl) ?? data['video_url'],
    'coordinates': supaSerialize(coordinates) ?? data['coordinates'],
    'grade': supaSerialize(grade) ?? data['grade'],
    'user_id': supaSerialize(userId) ?? data['user_id'],
    'climb_type_id': supaSerialize(climbTypeId) ?? data['climb_type_id'],
  });
}

/// Date: 2025-08-05 22:07:53.008466
