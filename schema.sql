--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.13 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA public;


--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- Name: location_type; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.location_type AS ENUM (
    'indoor',
    'outdoor'
);


--
-- Name: TYPE location_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TYPE public.location_type IS 'The type of location';


--
-- Name: get_closest_location(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_closest_location(latitude double precision, longitude double precision) RETURNS record
    LANGUAGE plpgsql
    AS $_$-- Make sure you're not in a transaction block when running this in psql or Supabase SQL editor
BEGIN
create or replace function get_closest_location(user_lat double precision, user_lng double precision)
returns table (
  id uuid,
  name text,
  boulder_count int,
  top_rope_count int,
  lead_count int,
  latitude double precision,
  longitude double precision
)
language plpgsql
as $function$
begin
  return query
    select
      l.id,
      l.name,
      l.boulder_count,
      l.top_rope_count,
      l.lead_count,
      st_y(l.coordinates) as latitude,
      st_x(l.coordinates) as longitude
    from
      locations l
    limit 1;
end;
$function$;
END;$_$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: climbs_climb_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.climbs_climb_types (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: climb_climb_types_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.climbs_climb_types ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.climb_climb_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: climb_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.climb_types (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    name text NOT NULL
);


--
-- Name: climbs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.climbs (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    name text NOT NULL,
    grade text
);


--
-- Name: climbs_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.climbs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.climbs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: locations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.locations (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    coordinates tiger.geography NOT NULL,
    name text NOT NULL,
    type public.location_type NOT NULL
);


--
-- Name: locations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.locations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.locations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: posts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.posts (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    title text NOT NULL,
    description text,
    grade text,
    "time" integer,
    video_url text NOT NULL,
    posts_users_fk uuid,
    posts_climb_types_fk bigint
);


--
-- Name: climbs_climb_types climb_climb_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.climbs_climb_types
    ADD CONSTRAINT climb_climb_types_pkey PRIMARY KEY (id);


--
-- Name: climb_types climb_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.climb_types
    ADD CONSTRAINT climb_types_pkey PRIMARY KEY (id);


--
-- Name: climbs climbs_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.climbs
    ADD CONSTRAINT climbs_pkey PRIMARY KEY (id);


--
-- Name: locations locations_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.locations
    ADD CONSTRAINT locations_id_key UNIQUE (id);


--
-- Name: locations locations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.locations
    ADD CONSTRAINT locations_pkey PRIMARY KEY (id);


--
-- Name: posts post_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT post_pkey PRIMARY KEY (id);


--
-- Name: locations_coordinates_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX locations_coordinates_idx ON public.locations USING gist (coordinates);


--
-- Name: climbs_climb_types climb_climb_types_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.climbs_climb_types
    ADD CONSTRAINT climb_climb_types_id_fkey FOREIGN KEY (id) REFERENCES public.climbs(id) ON DELETE CASCADE;


--
-- Name: climbs climbs_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.climbs
    ADD CONSTRAINT climbs_id_fkey FOREIGN KEY (id) REFERENCES public.locations(id) ON DELETE CASCADE;


--
-- Name: locations Enable read access for all users; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Enable read access for all users" ON public.locations FOR SELECT USING (true);


--
-- Name: climb_types; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.climb_types ENABLE ROW LEVEL SECURITY;

--
-- Name: climbs; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.climbs ENABLE ROW LEVEL SECURITY;

--
-- Name: climbs_climb_types; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.climbs_climb_types ENABLE ROW LEVEL SECURITY;

--
-- Name: locations; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.locations ENABLE ROW LEVEL SECURITY;

--
-- Name: posts; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.posts ENABLE ROW LEVEL SECURITY;

--
-- PostgreSQL database dump complete
--

